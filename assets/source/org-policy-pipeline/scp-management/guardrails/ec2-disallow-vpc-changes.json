[
  {
    "Effect": "Deny",
    "Action": [
      "ec2:AcceptVpcPeeringConnection",
      "ec2:AssociateClientVpnTargetNetwork",
      "ec2:AssociateRouteTable",
      "ec2:AttachInternetGateway",
      "ec2:AttachVPNGateway",
      "ec2:AuthorizeClientVpnIngress",
      "ec2:CreateCarrierGateway",
      "ec2:CreateClientVpnEndpoint",
      "ec2:CreateCustomerGateway",
      "ec2:CreateDefaultSubnet",
      "ec2:CreateDefaultVpc",
      "ec2:CreateEgressOnlyInternetGateway",
      "ec2:CreateInternetGateway",
      "ec2:CreateNatGateway",
      "ec2:CreateRoute",
      "ec2:CreateRouteTable",
      "ec2:CreateSubnet",
      "ec2:CreateTransitGateway",
      "ec2:CreateTransitGatewayVpcAttachment",
      "ec2:CreateVpc",
      "ec2:CreateVpcEndpoint",
      "ec2:CreateVpcPeeringConnection",
      "ec2:CreateVpnConnection",
      "ec2:CreateVPNGateway",
      "ec2:DeleteInternetGateway",
      "ec2:DeleteNatGateway",
      "ec2:DeleteRoute",
      "ec2:DeleteRouteTable",
      "ec2:DeleteSubnet",
      "ec2:DeleteTransitGateway",
      "ec2:DeleteTransitGatewayVpcAttachment",
      "ec2:DeleteVpc",
      "ec2:DeleteVpcEndpoints",
      "ec2:DeleteVpcPeeringConnection",
      "ec2:DetachInternetGateway",
      "ec2:DisassociateRouteTable",
      "ec2:ModifyClientVpnEndpoint",
      "ec2:ModifySubnetAttribute",
      "ec2:ModifyVpcAttribute",
      "ec2:ModifyVpcEndpoint",
      "ec2:ModifyVpcPeeringConnectionOptions",
      "ec2:ModifyVpnConnection",
      "ec2:ReplaceRouteTableAssociation",
      "globalaccelerator:Create*",
      "globalaccelerator:Update*"
    ],
    "Resource": "*",
    "Condition": {
      "ArnNotLike": {
        "aws:PrincipalARN": [
          "arn:*:iam::*:role/AWSControlTowerExecution",
          "arn:*:iam::*:role/AWSAFTExecution"
        ]
      }
    }
  }
]